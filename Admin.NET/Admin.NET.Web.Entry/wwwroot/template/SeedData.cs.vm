// Admin.NET 项目的版权、商标、专利和其他相关权利均受相应法律法规的保护。使用本项目应遵守相关法律法规和许可证的要求。
//
// 本项目主要遵循 MIT 许可证和 Apache 许可证（版本 2.0）进行分发和使用。许可证位于源代码树根目录中的 LICENSE-MIT 和 LICENSE-APACHE 文件。
//
// 不得利用本项目从事危害国家安全、扰乱社会秩序、侵犯他人合法权益等法律法规禁止的活动！任何基于本项目二次开发而产生的一切法律纠纷和责任，我们不承担任何责任！

using Admin.NET.Core;
using @Model.EntityNameSpace;

namespace @Model.NameSpace;

/// <summary>
/// @(Model.Description) 表种子数据
/// </summary>
public class @(Model.SeedDataName): ISqlSugarEntitySeedData<@(Model.EntityName)>
{
    /// <summary>
    /// 种子数据
    /// </summary>
    /// <returns></returns>
    public IEnumerable<@(Model.EntityName)> HasData()
    {
        string recordsJSON = @@"
            @(Model.RecordsJSON.Replace("\"","\"\"").Replace("\n", "\n\t\t\t"))
        ";
        List<@(Model.EntityName)> records = Newtonsoft.Json.JsonConvert.DeserializeObject<List<@(Model.EntityName)>>(recordsJSON);
        @if (Model.JsonIgnoreInfo.Count>0) {
        @:
        @:#region 处理 JsonIgnore 的Property
        @:
            @foreach (var jii in Model.JsonIgnoreInfo){
                @foreach (var j in jii){
        @:records[@j.RecordIndex].@(j.Name) = @(j.Value);
                }
                @:
            }
        @:#endregion
        }
        
        // 后处理数据的特殊字段
		//for (int i = 0; i < records.Count; i++) { }

        return records;
    }
}