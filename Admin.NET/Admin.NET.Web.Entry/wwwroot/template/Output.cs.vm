// Admin.NET 项目的版权、商标、专利和其他相关权利均受相应法律法规的保护。使用本项目应遵守相关法律法规和许可证的要求。
//
// 本项目主要遵循 MIT 许可证和 Apache 许可证（版本 2.0）进行分发和使用。许可证位于源代码树根目录中的 LICENSE-MIT 和 LICENSE-APACHE 文件。
//
// 不得利用本项目从事危害国家安全、扰乱社会秩序、侵犯他人合法权益等法律法规禁止的活动！任何基于本项目二次开发而产生的一切法律纠纷和责任，我们不承担任何责任！

namespace @Model.NameSpace;

/// <summary>
/// @(@Model.BusName)输出参数
/// </summary>
public class @(@Model.ClassName)Output
{
@foreach (var column in Model.TableField){
    @:/// <summary>
    @:/// @column.ColumnComment
    @:/// </summary>
if(column.EffectType == "fk")
{
    @:public @column.NetType @column.PropertyName { get; set; } 
    @:
    @:/// <summary>
    @:/// @(column.ColumnComment) 描述
    @:/// </summary>
    @:public @(@column.FkColumnNetType) @(@column.PropertyName)@(@column.FkColumnName) { get; set; } 

}else if(column.EffectType == "Upload"){
    @:public @column.NetType @column.PropertyName { get; set; }
    @:public SysFile @(@column.PropertyName)Attachment { get; set; }
}else if(column.EffectType == "ApiTreeSelect"){
    @:public @column.NetType @column.PropertyName { get; set; } 
    @:
    @:/// <summary>
    @:/// @(column.ColumnComment) 描述 
    @:/// </summary>
    @:public string? @(@column.PropertyName)@(@column.DisplayColumn) { get; set; } 
}else{
    @:public @column.NetType @(@column.PropertyName) { get; set; }
}
    @:
}
    }
 

@foreach (var column in Model.TableField){
if (@column.EffectType == "ApiTreeSelect"){
    @:// 使用实际实体@(@column.FkTableName),所以这里就删了
    @:/*
    @:[SugarTable("@(@column.FkTableName)")]
    @:public class @(@column.FkEntityName)TreeOutput: EntityBaseId
    @:{
        @:[SugarColumn(ColumnName = "@(@column.DisplayColumn)")]
        @:public @(@Model.GetColumnNetType(@column.FkTableName,@column.DisplayColumn)) Label { get; set; }

        @:[SugarColumn(ColumnName = "@(@column.ValueColumn)", IsPrimaryKey = true, IsIdentity = false)]
        @:public @(@Model.GetColumnNetType(@column.FkTableName,@column.ValueColumn))  Value { get; set; }

        @:public @(@Model.GetColumnNetType(@column.FkTableName,@column.PidColumn)) @column.PidColumn { get; set; }
        @:[SugarColumn(IsIgnore = true)]
        @:public List<@(@column.FkEntityName)TreeOutput> Children { get; set; }
    @:}
    @:*/
}
}
